#!/usr/bin/env ruby


require 'spider-gazelle'
require 'optparse'


options = {
    Host: "0.0.0.0",
    Port: 3000,
    environment: ENV['RACK_ENV'] || 'development',
    rackup: "#{Dir.pwd}/config.ru",
    Verbose: false
}

parser = OptionParser.new do |opts|
    opts.on "-p", "--port PORT", Integer, "Define what port TCP port to bind to (default: 3000)" do |arg|
        options[:Port] = arg
    end

    opts.on "-a", "--address HOST", "bind to HOST address (default: 0.0.0.0)" do |arg|
        options[:Host] = arg
    end

    opts.on "-v", "--verbose", "loud output" do
        options[:Verbose] = true
    end

    opts.on "-e", "--environment ENVIRONMENT", "The environment to run the Rack app on (default: development)" do |arg|
        options[:environment] = arg
    end

    opts.on "-r", "--rackup FILE", "Load Rack config from this file (default: config.ru)" do |arg|
        options[:rackup] = arg
    end

    opts.on "-l", "--log FILE", "Location of the servers log file (default: logs/server.log)" do |arg|
        ENV['SG_LOG'] = arg
    end

    opts.on "-m", "--mode MODE", "Either thread, process or no_ipc (default: thread)" do |arg|
        ENV['SG_MODE'] = arg
    end
end

parser.banner = "sg <options> <rackup file>"
parser.on_tail "-h", "--help", "Show help" do
    puts parser
    exit 1
end

parser.parse!(ARGV)

if ARGV.last =~ /\.ru$/
    options[:rackup] = ARGV.shift
end

unless File.exists?(options[:rackup])
    abort "No rackup found at #{options[:rackup]}"
end

# Force process mode on Windows (sockets over pipes not working at the moment)
ENV['SG_MODE'] = 'no_ipc' if ::FFI::Platform.windows?

::SpiderGazelle::Spider.run options[:rackup], options

puts "\nSpider-Gazelle leaps through the veldt"
