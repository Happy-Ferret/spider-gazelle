#!/usr/bin/env ruby


require 'spider-gazelle'
require 'optparse'


options = {
    Host: "0.0.0.0",
    Port: 3000,
    environment: ENV['RACK_ENV'] || 'development',
    rackup: "#{Dir.pwd}/config.ru"
}

parser = OptionParser.new do |opts|
    opts.on "-p", "--port PORT", Integer, "Define what port TCP port to bind to (default: 3000)" do |arg|
        options[:Port] = arg
    end

    opts.on "-a", "--address HOST", "bind to HOST address (default: 0.0.0.0)" do |arg|
        options[:Host] = arg
    end

    opts.on "-q", "--quiet", "Quiet down the output" do
        options[:Quiet] = true
    end

    opts.on "-e", "--environment ENVIRONMENT", "The environment to run the Rack app on (default: development)" do |arg|
        options[:environment] = arg
    end

    opts.on "-r", "--rackup FILE", "Load Rack config from this file (default: config.ru)" do |arg|
        options[:rackup] = arg
    end
end

parser.banner = "sg <options> <rackup file>"
parser.on_tail "-h", "--help", "Show help" do
    puts parser
    exit 1
end

parser.parse!(ARGV)

if ARGV.last =~ /\.ru$/
    options[:rackup] = ARGV.shift
end

unless File.exists?(options[:rackup])
    abort "No rackup found at #{options[:rackup]}"
end

app, rack_options = Rack::Builder.parse_file options[:rackup]
server = ::SpiderGazelle::Spider.new(app, options)

puts "Look out! Here comes Spider-Gazelle #{::SpiderGazelle::VERSION}!"
puts "* Environment: #{ENV['RACK_ENV']}"
puts "* Listening on tcp://#{options[:Host]}:#{options[:Port]}"

begin
    server.run
ensure
    puts "Spider-Gazelle leaps through the veldt"
end
